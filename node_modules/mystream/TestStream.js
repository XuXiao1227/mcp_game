var async = require('async');

var Readable = require('stream').Readable;
var util = require('util');
var dc = require('db').dc;

util.inherits(TestStream, Readable);

function TestStream(opt) {
    Readable.call(this, opt);
    var self = this;
    //self.count = 0;
    self.file_id = 12;
    self.start = 0;
};

TestStream.prototype._read = function() {
    var self = this;
    var table = dc.pg.get("file_block");
    var cond = {start:self.start, file_id:self.file_id};
    table.find(cond, {}, function(err, data){
        if(data && data.affected > 0)
        {
            var set = data.rst[0];
            var content = set.content;
            //var buf = new Buffer(content, "base64");
            self.start = self.start + set.size;
            self.push(content);
        }
        else
        {
            self.push(null);
        }
    });
};

async.waterfall([
    function (cb) {   //连接数据库
        dc.init(function (err) {
            cb(err);
        });
    },
    //start web
    function (cb) {
        new TestStream().pipe(process.stdout);
        //cb(null);
    }
], function (err, result) {
    if (err)
    {
        console.error(err); // -> null
    }
    else
    {
        console.log(result); // -> 16
    }
});
