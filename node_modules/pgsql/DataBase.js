var async = require('async');
var Pool = require('./Pool.js');

var DataBase = function(config)
{
    var self = this;
    self.url = config.url;
    self.cmPoolSize = config.cmPoolSize;   //无事务数据库连接池大小
    self.trPoolSize = config.trPoolSize;    //事务连接池大小
    self.esPoolSize = config.esPoolSize;    //执行escape的连接池的大小

    self.tables = [];
    self.tablesByName = {};
};

/**
 * 加入一个表到数据库
 * @param table
 */
DataBase.prototype.put = function(table)
{
    var self = this;
    self.tablesByName[table.name] = table;
    self.tables.push(table);
    table.db = self;
};

/**
 * 获得表对象
 * @param name
 * @returns {*}
 */
DataBase.prototype.get = function(name)
{
    var self = this;
    return self.tablesByName[name];
};

/**
 * 初始化数据库
 * @param cb
 */
DataBase.prototype.init = function(cb)
{
    var self = this;
    async.waterfall([
        function(cb){   //初始化不显式声明事务的连接池
            var cmPool = new Pool({db:self.url, size:self.cmPoolSize}, function(err, data){
                self.cmPool = cmPool;
                cb(err);
            });
        },
        function(cb)    //处理事务的连接专门从trPool中取得
        {
            var trPool = new Pool({db:self.url, size:self.trPoolSize}, function(err, data){
                self.trPool = trPool;
                cb(err);
            });
        },
        function(cb)    //esPool是专门用来转义用的
        {
            var esPool = new Pool({db:self.url, size:self.esPoolSize}, function(err, data){
                self.esPool = esPool;
                cb(err, "init success!");
            });
        }
    ], cb);
};

/**
 * 对字符串进行转义
 * @param str
 * @returns {*}
 */
DataBase.prototype.escape = function(str)
{
    return this.esPool.escape(str);
};

/**
 * 独占一个连接
 * @param cb
 */
DataBase.prototype.getConn = function(cb)
{
    this.trPool.getConn(cb);
};

/**
 * 返回连接到连接池
 * @param conn
 */
DataBase.prototype.unLock = function(conn)
{
    this.trPool.unLock(conn);
};

/**
 * 执行sql命令
 * @param cmd
 * @param cb
 */
DataBase.prototype.execute = function(cmd, cb)
{
    var self = this;
    self.cmPool.execute(cmd, cb);
};

module.exports = DataBase;