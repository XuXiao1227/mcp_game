var async = require('async');

var config = require('config');
var ec = config.ec;
var prop = config.prop;

var cons = require('cons');
var keyFromType = cons.keyFromType;
var customerType = cons.customerType;

var esut = require('easy_util');
var digestUtil = esut.digestUtil;
var log = esut.log;
var dateUtil = esut.dateUtil;

var dc = require('db').dc;

var game = require('game');

var Control = function () {
    var self = this;
    var cmdArray = [
        {code: 'BT01', fromType: keyFromType.CACHE, des: "投注"}
    ];
    self.cmd = {};
    for(var i = 0; i < cmdArray.length; i++)
    {
        var set = cmdArray[i];
        self.cmd[set.code] = set;
    }
};

Control.prototype.checkBT01 = function (headNode, bodyNode, cb) {
    var ticket = bodyNode.ticket;
    async.waterfall([
        function(cb)    //票据字段必须存在
        {
            if(ticket)
            {
                cb(null);
            }
            else
            {
                cb(ec[2000]);
            }
        },
        function(cb)    //游戏和投注号码必须存在
        {
            if(typeof ticket.game_code != 'string' ||
                typeof ticket.number != 'string')
            {
                cb(ec[2000]);
            }
            else
            {
                cb(null);
            }
        },
        function(cb)    //游戏是否正在销售
        {
            var table = dc.pg.get('game');
            table.find({code:ticket.game_code}, {}, function(err, data){
                if(err || data.rst.length < 1)
                {
                    cb(ec[2001]);
                }
                else
                {
                    var set = data.rst[0];
                    if(set.status != cons.gameStatus.OPEN.id)
                    {
                        cb(ec[2001]);
                    }
                    else
                    {
                        cb(null);
                    }
                }
            });
        },
        function(cb)    //检验号码格式
        {
            game.validateFactory.do(ticket, function(err, data){
                cb(err);
            });
        }
    ], function (err) {
        cb(err);
    });
};

/**
 * 用户投注
 * @param headNode
 * @param bodyNode
 * @param cb
 */
Control.prototype.handleBT01 = function (headNode, bodyNode, cb) {
    var backBody = {};
    var ticket = bodyNode.ticket;
    var userId = parseInt(headNode.userId);
    async.waterfall([
        function(cb)    //扣款
        {
            var table = dc.pg.get("customer");
            var cond = {id:userId};
            var doc = {
                $inc: {
                    gold:ticket.amount*(-1)
                }
            };
            var ret = {
                gold:1
            };
            table.update(cond, doc, {ret:ret}, function(err, data){
                if(data && data.rst.length > 0)
                {
                    backBody.customer = {gold:data.rst[0].gold};
                    cb(null);
                }
                else
                {
                    cb(err);
                }
            });
        },
        function(cb)    //记录账户流水
        {
            var table = dc.pg.get("gold_log");
            var goldLog = {
                amount:(-1)*ticket.amount,
                before:backBody.customer.gold + ticket.amount,
                after:backBody.customer.gold,
                subject_id:cons.goldSubject.BET.id,
                remark:cons.goldSubject.BET.des,
                customer_id:userId,
                order_id:bodyNode.uuid
            };
            table.save(goldLog, function(err, data){
                cb(err);
            });
        },
        function(cb)    //算奖
        {
            game.checkFactory.do(ticket, function(err, data){
                backBody.ticket = ticket;
                cb(err);
            });
        },
        function(cb)    //计算中奖金额
        {
            var table = dc.pg.get("game_level");
            ticket.hit_amount = 0;
            var draw_info = ticket.draw_info;
            var draw_info_array = [];
            for(var key in draw_info)
            {
                draw_info_array.push(draw_info[key]);
            }
            ticket.draw_info = draw_info_array; //改成数组形式
            async.eachSeries(draw_info_array, function(info, callback) {
                var cond = {game_code:ticket.game_code, code:info.level};
                table.find(cond, {hit_amount:1}, function(err, data){
                    if(data && data.rst.length > 0)
                    {
                        ticket.hit_amount += data.rst[0].hit_amount;
                        callback();
                    }
                    else
                    {
                        callback(ec[9999]);
                    }
                });
            }, function(err){
                cb(err);
            });
        },
        function(cb)    //保存到数据库
        {
            var ticketToSave = {
                customer_id:userId,
                game_code:ticket.game_code,
                multiple:ticket.multiple,
                amount:ticket.amount,
                number:ticket.number,
                draw_number:JSON.stringify(ticket.draw_number),
                draw_info:JSON.stringify(ticket.draw_info),
                hit_amount:ticket.hit_amount,
                seq_id:bodyNode.uuid
            }
            var table = dc.pg.get("ticket");
            table.save(ticketToSave, function(err, data){
                console.log(err);
                cb(err);
            });
        },
        function(cb)    //如果中奖，进行返奖
        {
            if(ticket.hit_amount > 0)
            {
                var table = dc.pg.get("customer");
                var cond = {id:userId};
                var doc = {
                    $inc: {
                        gold:ticket.hit_amount
                    }
                };
                var ret = {
                    gold:1
                };
                table.update(cond, doc, {ret:ret}, function(err, data){
                    if(data && data.rst.length > 0)
                    {
                        backBody.customer.gold = data.rst[0].gold;
                        cb(null);
                    }
                    else
                    {
                        cb(err);
                    }
                });
            }
            else
            {
                cb(null);
            }
        },
        function(cb)    //记录账户流水
        {
            if(ticket.hit_amount > 0) {
                var table = dc.pg.get("gold_log");
                var goldLog = {
                    amount: ticket.hit_amount,
                    before: backBody.customer.gold - ticket.hit_amount,
                    after: backBody.customer.gold,
                    subject_id: cons.goldSubject.HIT.id,
                    remark: cons.goldSubject.HIT.des,
                    customer_id: userId,
                    order_id: bodyNode.uuid
                };
                table.save(goldLog, function (err, data) {
                    cb(err);
                });
            }
            else
            {
                cb(null);
            }
        }
    ], function (err, rst) {
        cb(err, backBody);
    });
};

module.exports = new Control();