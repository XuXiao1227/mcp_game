var async = require('async');

var esut = require('easy_util');
var log = esut.log;

var config = require('config');
var ec = config.ec;

var prop = require('./Prop.js');

var Validate = function()
{

};

Validate.prototype.do = function(ticket, cb)
{
    var self = this;
    var number = ticket.number;
    var reg = /^\d{1}(,\d{1}){0,5}$/;
    async.waterfall([
        function(cb){
            if(!reg.test(number)){
                log.error("正则表达式校验不通过");
                cb(ec[2000]);
            }
            else
            {
                cb(null);
            }
        },
        function(cb)    //校验号码范围
        {
            var pass = true;
            var numStrArray = number.split(',');
            for(var key in numStrArray)
            {
                var numInt = parseInt(numStrArray[key]);
                if(numInt < 1 || numInt > 6)
                {
                    pass = false;
                    break;
                }
            }
            if(pass)
            {
                cb(null, {count:numStrArray.length});
            }
            else
            {
                log.error("号码超过范围");
                cb(ec[2000]);
            }
        },
        function(data, cb)  //校验金额是否正确
        {
            if(ticket.multiple*data.count*prop.price == ticket.amount)
            {
                cb(null);
            }
            else
            {
                cb(ec[2002]);
            }
        }
    ], function (err, result) {
        cb(err, result);
    });
};

module.exports = new Validate();